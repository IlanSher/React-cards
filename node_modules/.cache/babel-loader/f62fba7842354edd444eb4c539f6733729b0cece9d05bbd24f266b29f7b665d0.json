{"ast":null,"code":"var _jsxFileName = \"/home/ilan/my-react/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport Backdrop from \"./Backdrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(props) {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onCancel: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n_s(Todo, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","Modal","Backdrop","jsxDEV","_jsxDEV","Todo","props","_s","modalIsOpen","setModalIsOpen","deleteHandler","closeModalHandler","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCancel","_c","$RefreshReg$"],"sources":["/home/ilan/my-react/src/components/Todo.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Modal from \"./Modal\";\nimport Backdrop from \"./Backdrop\";\n\nfunction Todo(props) {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    function deleteHandler() {\n        setModalIsOpen(true);\n    }\n\n    function closeModalHandler() {\n        setModalIsOpen(false);\n    }\n\n    return <div className=\"card\">\n        <h2>{props.text}</h2>\n        <div className=\"actions\">\n            <button className=\"btn\" onClick={deleteHandler}>Delete</button>\n        </div>\n        {modalIsOpen && <Modal />}\n        {/* This is a short of this: */}\n        {/* {modalIsOpen ? <Modal /> : null} */}\n        {modalIsOpen && <Backdrop onCancel={closeModalHandler} />}\n\n    </div>\n}\n\nexport default Todo;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,SAASU,aAAaA,CAAA,EAAG;IACrBD,cAAc,CAAC,IAAI,CAAC;EACxB;EAEA,SAASE,iBAAiBA,CAAA,EAAG;IACzBF,cAAc,CAAC,KAAK,CAAC;EACzB;EAEA,oBAAOL,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACxBT,OAAA;MAAAS,QAAA,EAAKP,KAAK,CAACQ;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACrBd,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAAAC,QAAA,eACpBT,OAAA;QAAQQ,SAAS,EAAC,KAAK;QAACO,OAAO,EAAET,aAAc;QAAAG,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7D,EACLV,WAAW,iBAAIJ,OAAA,CAACH,KAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAGxBV,WAAW,iBAAIJ,OAAA,CAACF,QAAQ;MAACkB,QAAQ,EAAET;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEvD;AACV;AAACX,EAAA,CAtBQF,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAwBb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}